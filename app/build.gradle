apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    final API_URL_DEV = "https://www.google.com/"
    final API_URL_PROD = "https://www.google.com/"

    defaultConfig {
        applicationId "com.adgdelhi.jumpstart"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        // setting custom name for apk
        project.ext.set("archivesBaseName", "AndroidJumpstart-" + defaultConfig.versionName
                + "-vc" + defaultConfig.versionCode)
    }

    signingConfigs {
        // todo change as per app config
        debugProd {
            storeFile file("../jumpstart.keystore")
            storePassword "moldedbits"
            keyAlias "jumpstart"
            keyPassword "moldedbits"
        }
        release {
            storeFile file("../jumpstart.keystore")
            storePassword "moldedbits"
            keyAlias "jumpstart"
            keyPassword "moldedbits"
        }
        releaseProd {
            storeFile file("../jumpstart.keystore")
            storePassword "moldedbits"
            keyAlias "jumpstart"
            keyPassword "moldedbits"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
            buildConfigField 'String', 'API_URL', "\"" + API_URL_DEV + "\""
        }

        debugProd {
            applicationIdSuffix '.debug'
            minifyEnabled false
            buildConfigField 'String', 'API_URL', "\"" + API_URL_PROD + "\""
            signingConfig signingConfigs.debugProd
        }

        release {
            applicationIdSuffix '.release'
            buildConfigField 'String', 'API_URL', "\"" + API_URL_DEV + "\""
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        releaseProd {
            buildConfigField 'String', 'API_URL', "\"" + API_URL_PROD + "\""
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseProd
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    // enable viewbinding
    viewBinding {
        enabled = true
    }

    // enable only parcelize and not synthetics
    androidExtensions {
        features = ["parcelize"]
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project (path: ':core')

    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "com.google.android.material:material:$materialDesignVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    implementation "com.google.firebase:firebase-messaging:$fcmVersion"

    // Koin AndroidX Scope feature
    implementation "org.koin:koin-androidx-scope:$koinVersion"
    // Koin AndroidX ViewModel feature
    implementation "org.koin:koin-androidx-viewmodel:$koinVersion"

    // Use Retrofit for API interaction
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofitLoggingInterceptor"

    // Timber for logging
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // moshi for json serialization and deserialization
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"


    //Tests
    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:3.1.0'
    // Optional -- UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}